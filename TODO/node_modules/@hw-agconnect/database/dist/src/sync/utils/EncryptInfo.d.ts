import { ErrorCode } from '../../utils/ErrorCode';
export declare enum EncryptionKeyStatus {
    DEFAULT = 0,
    NORMAL = 1,
    UPDATING = 2,
    INTERRUPT = 3
}
export declare class EncryptInfo {
    private firstSaltValue_?;
    private secondSaltValue_?;
    private rootKeyToken_?;
    private dataKeyCipherText_?;
    private oldDataKeyCipherText_?;
    private keyStatus_;
    private keyVersion_;
    get firstSaltValue(): Uint8Array | undefined;
    set firstSaltValue(value: Uint8Array | undefined);
    get secondSaltValue(): Uint8Array | undefined;
    set secondSaltValue(value: Uint8Array | undefined);
    get rootKeyToken(): Uint8Array | undefined;
    set rootKeyToken(value: Uint8Array | undefined);
    get dataKeyCipherText(): Uint8Array | undefined;
    set dataKeyCipherText(value: Uint8Array | undefined);
    get oldDataKeyCipherText(): Uint8Array | undefined;
    set oldDataKeyCipherText(value: Uint8Array | undefined);
    get keyStatus(): number;
    set keyStatus(status: number);
    get keyVersion(): number;
    set keyVersion(version: number);
    clear(): void;
}
export declare class EncryptResult {
    private encryptInfo_;
    private resultCode_;
    constructor(resultCode: ErrorCode, encryptInfo: EncryptInfo[]);
    get resultCode(): ErrorCode;
    get encryptInfo(): EncryptInfo[];
}
