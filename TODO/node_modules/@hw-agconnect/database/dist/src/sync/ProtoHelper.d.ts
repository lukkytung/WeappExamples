import { IConversionOptions } from 'protobufjs';
import { CertificateService } from '../security/CertificateService';
import { QueryType, SyncResult } from './request/SyncResult';
import { SyncRequest } from './request/SyncRequest';
import { MessageSubType, MessageType } from './utils/MessageType';
export declare class ConversionOptions implements IConversionOptions {
    longs: StringConstructor;
    defaults: boolean;
}
export declare class ProtoHelper {
    static serializeMessage(message: SyncRequest, certificateService: CertificateService): object;
    static deserializeMessage(data: any): SyncResult;
    private static parseValue;
    private static schemaSub2Proto;
    private static schema2Proto;
    private static isWebSocketMessageType;
    private static buildClientInfo;
    private static objectUpdateDeserialization;
    private static objectUpdateSerialization;
    private static encryptionDeserialization;
    private static encryptionSerialization;
    private static objectQueryDeserialization;
    private static objectQuerySerialization;
    private static transactionDeserialization;
    private static transactionSerialization;
    private static querySubscribeDeserialization;
    private static querySubscribeSerialization;
    private static queryUnsubscribeDeserialization;
    private static queryUnSubscribeSerialization;
    private static querySubPushDeserialization;
    private static serverStatusQueryDeserialization;
    private static serverStatusQuerySerialization;
    private static emptyFuncDeserialization;
    private static emptyFuncSerialization;
    private static deserializationActions;
    private static serializationActions;
}
declare enum SerializeType {
    PROTOBUF = 3,
    JSON = 4
}
export { MessageType, MessageSubType, QueryType, SerializeType };
