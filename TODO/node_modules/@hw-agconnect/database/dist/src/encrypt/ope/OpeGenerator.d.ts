/// <reference types="crypto-js" />
export declare class OpeGenerator {
    private static readonly NUMBER_RADIX_DECIMAL;
    private static readonly INT8_DEFAULT_DIGIT;
    private static readonly CIPHER_TEXT_SAMPLE_REDUNDANCY;
    private static readonly MAX_ENTIRE_OPE_LEN;
    private static readonly OPE_UINT64_ERROR;
    private static readonly STRING_TRUNCATED_BYTE_LEN;
    generateOpeValue(input: string, inLen: number, type: number, key: CryptoJS.lib.WordArray): string;
    private generateOpeValueByUint64;
    private generateOpeValueByBigNum;
    private generateOpeValueForString;
    private getOpeValueByUint64;
    private getOpeValueByBigNum;
    private calculateOpeValueByUint64;
    private uniformSampleInUint64;
    private calculateCoinByUint64;
    private calculateOpeValueByBigNum;
    private uniformSampleInBigNum;
    private calculateSampleSpaceWithRedundancy;
    private calculateRedundancySize;
    private calculateSampleCoinInBigNum;
    private hex2binForUint64;
    private changeOrder;
    private inputVerification;
}
