import { CloudDBZoneQuery } from './CloudDBZoneQuery';
import { Transaction } from './Transaction';
import { OperationType } from './sync/utils/MessageType';
export declare type Operation = {
    operationType: OperationType;
    objectTypeName: string;
    objects: unknown[];
};
export declare type verifyObject = {
    objectTypeName: string;
    objects: any[];
};
export declare class TransactionImpl implements Transaction {
    private zone;
    private transactionObjectsSize;
    private needVerifyObjects;
    private needVerifyObjectsMap;
    private queryObjectsSize;
    private transactionList;
    constructor(zone: any);
    executeQuery<T>(cloudDBZoneQuery: CloudDBZoneQuery<T>): Promise<T[]>;
    executeUpsert<T>(objectList: T[]): Transaction;
    executeDelete<T>(objectList: T[]): Transaction;
    private calculateObjectsSize;
    release(): void;
    isTransactionEmpty(): boolean;
    getTransactionObjectsSize(): number;
    getQueryObjectsSize(): number;
    getTransactionList(): Array<Operation>;
    getNeedVerifyObjects(): any[];
    sortNeedVerifyObjects(): void;
    private checkObjectList;
}
